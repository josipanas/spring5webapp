package guru.springframework.spring5webapp.bootstrap;

import guru.springframework.spring5webapp.model.Author;
import guru.springframework.spring5webapp.model.Book;
import guru.springframework.spring5webapp.repositories.AuthorRepository;
import guru.springframework.spring5webapp.repositories.BookRepository;
import org.springframework.context.ApplicationEvent;
import org.springframework.context.ApplicationListener;
import org.springframework.context.event.ContextRefreshedEvent;
import org.springframework.stereotype.Component;

@Component
public class DevBootstrap implements ApplicationListener<ContextRefreshedEvent> {

    private AuthorRepository authorRepository;
    private BookRepository bookRepository;

    public DevBootstrap(AuthorRepository authorRepository, BookRepository bookRepository) {
        this.authorRepository = authorRepository;
        this.bookRepository = bookRepository;
    }

    @Override
    public void onApplicationEvent(ContextRefreshedEvent contextRefreshedEvent) {
        initData();
    }

    private void initData() {
        Author steveMcConnell = new Author("Steve", "McConnell");
        Book codeComplete = new Book("Code Complete", "12345", "Microsoft Press");
        steveMcConnell.getBooks().add(codeComplete);
        codeComplete.getAuthors().add(steveMcConnell);
        authorRepository.save(steveMcConnell);
        bookRepository.save(codeComplete);

        Author kathySierra = new Author("Kathy", "Sierra");
        Author bertBates = new Author("Bert", "Bates");
        Book headFirst = new Book("Head First Java", "6789", "O'Reilly Media");
        kathySierra.getBooks().add(headFirst);
        bertBates.getBooks().add(headFirst);
        // Note for many-to-many relation: if we have e.g. multiple authors, we need to add them to Book's Set<Author> authors variable.
        // Set doesn't allow duplicate elements. Author objects are considered equal if they have equal id variables.
        // Since the Id is autogenerated at commit to DB, it's initial value is null and only first element will be added to Set.
        // Solution is to call save() method after adding the first element to the Set. The save() method returns the saved entity, including the updated id field.
        headFirst.getAuthors().add(kathySierra);
        authorRepository.save(kathySierra);
        headFirst.getAuthors().add(bertBates);
        authorRepository.save(bertBates);
        bookRepository.save(headFirst);
    }


}
